---
title: "Why Should ML Engineers Learn Kubernetes?"
description: Learning K8s can give you an unreasonable advantage as an MLE and unblock your team.
categories: [K8s]
author: Hamel Husain
date: 2022-12-28
image: https://user-images.githubusercontent.com/1483922/208368976-37ea8413-7102-4e17-97f1-0832c7a071c8.png
order: 0
---

:::{.callout-important}
# K8s For Data Scientists Course
 If you came here looking for the course, feel free to jump ahead to: [K8s For Data Scientists](#course-k8s-for-data-scientists).
:::

[Kubernetes](https://kubernetes.io/), known as K8s, is an open-source system for deploying and managing containerized applications in the cloud.  An increasing amount of modern web applications are deployed on K8s.  If you are an ML engineer, it is increasingly likely that either the infrastructure you use to train, monitor, or orchestrate your models is deployed on K8s, or downstream applications that consume your models are running on K8s.  However, K8s is a complex system that can be intimidating to learn.

I agree with Chip Huyen that, in theory, [Data Scientists **shouldn't need to** learn K8s](https://huyenchip.com/2021/09/13/data-science-infrastructure.html).   However, the truth is:  **Even though you shouldn't have to, it's really beneficial if you do!**  I've found that learning the basics of K8s allows me to deploy tools and debug simple issues related to production applications. This is a huge advantage, as it enables me to be more productive and collaborate in a way few others can.  Furthermore, Kubernetes provides a standard way of deploying applications with powerful tools to ensure their resilience, making certain tasks significantly easier to accomplish than they would otherwise.

[Vicki Boykis](https://twitter.com/vboykis/status/1596610600511102976) seems to agree that the investment in learning this technology is worthwhile[^1]:

![](course_img/20221212131043.png)


Below, I outline several reasons why learning K8s is a good idea for data scientists[^2]. 

## Hosted solutions are not always an option

![A robot concierge helping a scientist](course_img/bellman.png)

The largest cloud providers offer their own respective flavors of ML infrastructure as hosted solutions[^3]. However, there is often a gap between these offerings and the needs of machine learning teams.  For example, I've seen the following tools deployed alongside or in place of hosted solutions:

- [Metaflow](https://metaflow.org/)
- [Kubeflow](https://www.kubeflow.org/)
- [Argo](https://argoproj.github.io/argo/)
- [JupyterHub](https://jupyter.org/hub)
- [Dask](https://www.dask.org/)
- etc.

 When open source isn't enough, third-party vendors are happy to install their software on your cloud. However, you often need basic infrastructure skills to enable either of these things. These skills often intersect with Kubernetes.

## Nobody is coming to save you

![A super hero](course_img/superhero.png)

A typical first experience as a machine learning professional is that you don't have the necessary tools to get started.  This is incredibly frustrating, as making progress without the proper tools can be hard.  This experience usually culminates in a conversation like this:

---

_ML Eng: I'm excited to join ACME company!  You've hired me to optimize marketing spending with predictive models.  The issue is that we don't have the basic infrastructure or tools necessary for me to work efficiently._

_Manager: I'm confused. Can't you install the tools you need?  Isn't that what you are for?  I was expecting that you would figure it out._

_ML Eng:  No, I don't know how to set up and deploy infrastructure.  We need a special infrastructure or DevOps person for that._

_Manager: It will be hard to ask for more resources if we don't know the expected return on investment.  Can you do the ML project first, demonstrate some value, and then we can invest in infrastructure?_

_ML Eng:  I need some minimum tools to experiment more quickly and develop a proof of concepts.  Also, I need tools that might help me collaborate better with my team..._

_... At this point, the Manager and the ML Eng are stuck debating the chicken and the egg problem.  This impasse leads to career dissatisfaction and stagnation._

---

By learning basic infrastructure skills, you can unblock yourself and your team in many cases!  Note that K8s are not a panacea for all infrastructure problems, and you must operate within the constraints of your organization and existing software stack.  There are always cases where K8s could be a poor solution to a problem.  However, with its growing popularity, it is increasingly likely that learning this technology will help you.

## K8s are like an OSS app store

![App store, abstract](course_img/app_store.png)

My favorite feature of K8s is they allow you to deploy software consistently, regardless of the type of software (web apps, workflow tools, etc.).  Furthermore, K8s are cloud agnostic, so your skills become extremely transferrable across cloud providers and organizations. K8s also offers excellent tools like [Helm](https://helm.sh/), which makes deploying distributed applications on the cloud very approachable.  Helm offers high-level abstractions that allow you to deploy complex applications with one command, with parameters that allow you to change important options. Better yet, the most popular OSS projects can be installed via Helm![^4]  

As a reminder, installing your tools in the cloud is important -- while you can install software on your laptop, **the whole point of many data science tools is to enable better collaboration with your team**.  To properly evaluate these tools, you will want to install them in an environment that your whole team can observe and interact with.


## ML research is crowded. Compete on SWE skills.

![An overcrowded room of scientists](course_img/crowd.png)

One of the best ways to set yourself apart as a data scientist is through your skills.  Traditional education often emphasizes learning the latest ML techniques.  However, cutting-edge ML research is very competitive.  It's also an extremely crowded space.

In my experience, the bottleneck many teams face is not a lack of knowledge of cutting-edge ML techniques, but software engineering skills and partners to help operationalize models.  If you take some time to learn how to stand up tools and infrastructure, you will be invaluable to your team.  


## Your company likely already runs K8s

![A scientist shaking hands with someone who runs infrastructure](course_img/meeting.png)

Just as Python is the lingua franca of data science, K8s is becoming the lingua franca of cloud infrastructure.[^5]  Basic proficiency with K8s will drastically increase your chances of garnering support for your desired tools in many organizations. Basic proficiency with K8s increases the likelihood that:

- Your DevOps counterparts will feel comfortable with the tools you want to deploy
- You will have a shared language in which to talk to your application administrators
- You will be more likely to attract people to help you with infra

These factors make it much more likely that you will get the tools that meet you where you are as opposed to something a software engineer without any data science experience thinks is a good idea (which I've seen happen a lot!).

:::{.callout-note}

My friend [Michał Jastrzębski](https://twitter.com/_inc0_), who specializes in ML infrastructure, has shared the following colorful anecdotes with me:

-  When I hear “Data Scientists shouldn’t learn K8s”, I hear “DevOps needs to learn Airflow”.
-  Do you really want to wait on a chronically understaffed team to help you stand up basic tools?
-  DevOps people don’t want anything to do with maintaining critical infra installed on a single VM.
-  Can data scientists meet DevOps halfway and learn a common API that we can both understand?

:::

_Even if your company doesn't run K8s, you can recruit generalists that can administer K8s for you, as opposed to trying to find a unicorn that specializes in ML Infrastructure._

## But isn't it overkill?

![Cutting oranges with a chainsaw](course_img/orange.png)

For simple apps that you want to stand up quickly or prototype, K8s is overkill. Instead, I'm advocating knowledge of K8s as useful when working within the environments found in many companies.  For example, if you want to deploy production software, hosting your data product on a single VM is often insufficient.  Many companies even have infrastructure that may block you from doing this with paved paths that only include Kubernetes.

Even if you are not deploying any production software, K8s can be invaluable in allowing you to deploy the tools you need.

## You don't need to be an expert

![A student sitting at a desk in a library](course_img/student.png)

K8s are complicated, but you don't need to become an expert to unlock great value as a Data Scientist.  I'm not suggesting that data scientists become K8s administrators.  K8s Administration is a very involved task and worthy of its own role. However, we can use managed cloud services and some basic knowledge to get far. That's why we are teaching a course on this topic: [Kubernetes for Data Scientists](#course-k8s-for-data-scientists).

## Course: K8s for Data Scientists

How are you going to learn Kubernetes?  My friends and I think it's an important enough topic to teach you!  We are developing a course that will teach you the following:

- How to spin up Kubernetes on the cloud
- How to install and configure popular Machine Learning tools like JupyterHub Dask, Argo, and Metaflow.
- Basic debugging 
- Familiarity with high-level concepts

We will teach you K8s from the perspective of what is most useful as a Machine Learning Engineer, so you can focus on getting value quickly. In addition, our unique skills as data scientists-turned-infrastructure engineers (or vice versa) will allow us to teach you the essential concepts and skills you need to know to be successful.

### Course Instructors

::: {layout="[21,79]"}
![](course_img//hamel.jpeg){.profile-pic2}

**[Hamel Husain](https://hamel.dev)** is a machine learning and software engineer.  He is currently a fastai core contributor and has been involved with several open-source data infrastructure projects such as Jupyter, Metaflow, and Kubeflow.  Hamel has built data science tools and infrastructure at companies such as Airbnb, GitHub and DataRobot.
:::

Hamel will lead the instruction of this course with the assistance of the following people:

::: {layout="[21,79]"}
![](course_img/jeremy.jpeg){.profile-pic2} 

[**Jeremy Lewi**](https://www.linkedin.com/in/jeremy-lewi-600aaa8/) is the co-founder and lead engineer of [Kubeflow](https://www.kubeflow.org/), a popular machine learning workflow system built on Kubernetes.  Jeremy also worked on the YouTube recommendation system at Google, where he honed his skills in systems for machine learning.  Jeremy is currently incubating his own applied ML startup. 
:::

::: {layout="[21,79]"}
![](course_img/michal.jpeg){.profile-pic2} 

[**Michał Jastrzębski**](https://www.linkedin.com/in/inc007/) is a software and infrastructure engineer at [VantAI](https://www.linkedin.com/company/vantai/), where he enables large teams of scientists to perform computational biology on vast amounts of data.  Michal is a former [OpenStack](https://www.openstack.org/) Kolla project technical lead.
:::

::: {layout="[21,79]"}
![](course_img/Zander.jpeg){.profile-pic2} 

[**Zander Matheson**](https://www.linkedin.com/in/alexandermatheson/) is the CEO of [Bytewax](https://bytewax.io/).  Bytewax maintains an open-source Python framework for building real-time applications with streaming data, which runs on Kubernetes. 
:::

### Sign Up

We want to gauge interest so we know how to structure this course (format, timing, syllabus etc). If you are interested, please sign up below.  We will send you updates as we develop the course.

<script async data-uid="4ccd85dfd8" src="https://hamel.ck.page/4ccd85dfd8/index.js"></script>

[^1]: [Vicki](https://vickiboykis.com/) is a champion of data scientists on the ground.  Her views resonate with people in the industry, especially those outside Silicon Valley, about the realities of being a data scientist.  She is not someone who is impressed by flashy or new technologies and is someone who takes a pragmatic approach to get the job done.  When she says you should learn K8s, you should pay attention!

[^2]: Each subsection of this article has a picture that has been generated by Stable diffusion with a prompt that very similar to the image caption.

[^3]: These systems are AWS - Sagemaker, Azure - AzureML and GCP - VertexAI.

[^4]: Helm charts are available for most popular open source tools like [Airflow](https://airflow.apache.org/docs/helm-chart/stable/index.html), [Dask](https://docs.dask.org/en/stable/deploying-kubernetes-helm.html), [JuptyerHub](https://z2jh.jupyter.org/en/stable/jupyterhub/installation.html), [Metaflow](https://github.com/outerbounds/metaflow-tools#metaflow-services-on-kubernetes-k8s), [Prefect](https://github.com/PrefectHQ/prefect-helm), [ElasaticSearch]( https://github.com/elastic/helm-charts) and more.

[^5]: It's likely that most places are still not using K8s, but the trend is strongly in that direction. 